plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    compileSdkVersion 32

    defaultConfig {
        applicationId "com.fct.compose"
        minSdkVersion 23
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }

    buildFeatures {
        viewBinding true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }
    buildToolsVersion '30.0.3'
}

dependencies {

    // core
    implementation "androidx.core:core-ktx:$androidx_core"
    implementation "androidx.appcompat:appcompat:$androidx_compat"

    // Compose
    implementation "androidx.compose.runtime:runtime:$compose"
    implementation "androidx.compose.ui:ui:$compose"
    implementation "androidx.compose.foundation:foundation:$compose"
    implementation "androidx.compose.foundation:foundation-layout:$compose"
    implementation "androidx.compose.material:material:$compose"
    implementation "androidx.compose.runtime:runtime-livedata:$compose"
    implementation "androidx.compose.ui:ui-tooling:$compose"
    implementation "com.google.android.material:compose-theme-adapter:$material_compose"

    // okhttp3
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3"
    implementation "com.squareup.okhttp3:okhttp:$okhttp3"

    // retrofit2
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"

    // coil for image processing
    implementation "io.coil-kt:coil-compose:$coil_compose"

    // room
    implementation "androidx.room:room-ktx:$kotlin_room"
    kapt "androidx.room:room-compiler:$kotlin_room"
    implementation "androidx.room:room-runtime:$kotlin_room"

    // design - xml
    implementation "com.google.android.material:material:$android_material"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraint"

    // lifecycle components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle"

    // nav
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation"

    // testing - required
    testImplementation "junit:junit:$test_junit"
    testImplementation "androidx.test:core:$test_core"
    testImplementation "androidx.test.ext:junit-ktx:$test_ktx"
    testImplementation "androidx.test.ext:truth:$test_truth"
    testImplementation "androidx.arch.core:core-testing:$test_arch"
    testImplementation "org.robolectric:robolectric:$test_robolectric"
    testImplementation "io.mockk:mockk:$test_mockk"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp3"
    testImplementation "androidx.room:room-testing:$kotlin_room"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$test_coroutines"
}